name: Build debian packages (arm64)

on:
  push:
    branches-ignore:
      - dependabot/**
    tags:
      - v*
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        fetch-depth: 0
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Build debian package
      run: |
        docker run --rm -i -v $PWD:/workspace arm64v8/ubuntu:20.04 bash <<'EOF'
        set -xeu
        cd /workspace
        uname -a
        apt-get update
        bash scripts/all.sh
        EOF
    - name: Upload result
      uses: actions/upload-artifact@v2
      with:
        name: focal-arm64
        path: |
          mozjpeg/*.deb
          mozjpeg/*.ddeb

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: focal-arm64
        path: artifact
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - run: |
        docker run --rm -i -v $PWD:/workspace arm64v8/ubuntu:20.04 bash <<'EOF'
        set -xeu
        cd /workspace
        uname -a
        apt-get update
        bash scripts/test.sh
        EOF

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Create release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        commitish: ${{ github.sha }}
        draft: true
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  upload:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        codename: [bionic, focal]
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.codename }}
        path: ${{ matrix.codename }}

    - name: Create a zip
      shell: bash
      run: zip ${{ matrix.codename }}.zip ${{ matrix.codename }}/*

    - name: Upload release asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ${{ matrix.codename }}.zip
        asset_name: ${{ matrix.codename }}.zip
        asset_content_type: application/zip

  deploy:
    needs: upload
    runs-on: ubuntu-latest
    strategy:
      matrix:
        codename: [bionic, focal]
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.codename }}
        path: ${{ matrix.codename }}
    - name: Listup files
      shell: bash
      run: find .
    - name: Deploy
      shell: bash
      run: |
        printenv DEPLOY_SCRIPT | base64 -d > deploy.sh
        bash deploy.sh upload "${{ matrix.codename }}" "mozjpeg" "${{ matrix.codename }}"
      env:
        DEPLOY_SCRIPT: ${{ secrets.YOROZU_DEPLOY_SCRIPT }}

  sign:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Sign
      shell: bash
      run: |
        printenv DEPLOY_SCRIPT | base64 -d > deploy.sh
        bash deploy.sh sign
      env:
        DEPLOY_SCRIPT: ${{ secrets.YOROZU_DEPLOY_SCRIPT }}
